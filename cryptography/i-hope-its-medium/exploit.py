

from pwn import *
from Crypto.Cipher import AES
import codecs

# p = process('./ihopeitsmedium.py')
p = remote('3.0.58.217', 2007)

def encrypt(msg, iv=None, key=None):
	p.sendlineafter("Choice: ", '1')
	p.sendlineafter("encrypt: ", msg)
	if key == None:
		p.sendlineafter("(y/n):", 'n')
	else:
		p.sendlineafter("(y/n):", 'y')
		p.sendlineafter("key: ", key)
	if iv == None:
		p.sendlineafter("(y/n):", 'n')
	else:
		p.sendlineafter("(y/n):", 'y')
		p.sendlineafter("IV: ", iv)

p.sendlineafter("Choice: ", '2')
p.recvuntil('b')
enc_flag = p.recvuntil(b'\n').strip().strip(b'\'')

encrypt(b"A"*15, iv=b"A"*16)

p.recvuntil('b')
enc_key = p.recvuntil(b'\n').strip().strip(b'\'')

aes = AES.new(b"A"*15 + b'\x01', AES.MODE_CBC, b"A"*16)
key = aes.decrypt(codecs.decode(enc_key, 'hex'))

encrypt(b"A"*15)
p.recvuntil('b')
enc_key = p.recvuntil(b'\n').strip().strip(b'\'')

aes = AES.new(b"A"*15 + b'\x01', AES.MODE_CBC, b"\x00"*16)
temp = aes.decrypt(codecs.decode(enc_key, 'hex'))
iv = b''
for i in range(len(temp)):
	iv += bytes([temp[i] ^ key[i]])

print(iv)
print(key)

aes = AES.new(key, AES.MODE_CBC, iv)
print(aes.decrypt(codecs.decode(enc_flag, 'hex')))

p.interactive()
p.close()