#!/usr/bin/env python3
from pwn import *
from fractions import Fraction
import timeit

start = timeit.default_timer()

p = process('./prob.py')

p.recvuntil('What do you want?: ')
p.sendline(b'1')
clue = p.recvuntil('What do you want?: ').split(b'\n')
clue = list(map(Fraction,clue[1][6:].decode('utf-8').split('|')))
print('clue:', clue)

hint = 'P3ppeR'
hint = list(map(ord, hint))

left = dict()
right = dict()
	
for i in range(100):
	for j in range(100):
		for k in range(100):
			tmp = [i, j, k]
			x = Fraction(0)
			for l in range(0, 3):
				x += tmp[l]*clue[l]
			left[x] = tmp

for i in range(100):
	for j in range(100):
		for k in range(100):
			tmp = [i, j, k]
			x = Fraction(0)
			for l in range(3, 6):
				x += tmp[l-3]*clue[l]
			right[x] = tmp

ans = list()
for t in range(len(hint)):
	ans.append([])
	tmp = list()
	for i in left.keys():
		try:
			tmp2 = list()
			c = hint[t] - i
			a = left[i]
			b = right[c]
			tmp2.extend(a)
			tmp2.extend(b)
			tmp.append(tmp2)
		except:
			continue
		
	for i in tmp:
		i.append(hint[t])
	print('row %d:' % t, tmp)
	ans[t].extend(tmp)
	
print('ans:', ans)

for i0 in ans[0]:
	for i1 in ans[1]:
		for i2 in ans[2]:
			for i3 in ans[3]:
				for i4 in ans[4]:
					for i5 in ans[5]:
						ans_to_send = [i0, i1, i2, i3, i4, i5]
						ans_to_send = ('|'.join(['|'.join(list(map(str,i))) for i in ans_to_send]))
						ans_to_send = bytes(ans_to_send.encode('utf-8'))
						try:
							p.sendline(b'2')
							p.sendline(ans_to_send)
							testing = p.recv(2000, timeout = 3.0)
							print(testing)
						except:
							stop = timeit.default_timer()
							print("finished processing in {:.2f} s".format(stop - start))
							exit()

stop = timeit.default_timer()
print("finished processing in {:.2f} s".format(stop - start))
exit()

